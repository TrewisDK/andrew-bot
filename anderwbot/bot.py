from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from keyboards.mainboard import mainboard
from keyboards.sizeboard import sizeboard
from keyboards.adminboard import adminboard
from database.database import *
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from states.ads_states import NewClothes, NewShoes
from random import randint

from config import TOKEN

storage = MemoryStorage()
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç—Å–≤—É–µ–º –≤ –±–æ—Ç–µ!\n\n–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?", reply_markup=mainboard)
    user(message.from_user.id)


@dp.message_handler(commands=['admin'])
async def process_help_command(message: types.Message):
    if is_admin(message.from_user.id):
        await bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–ø–∞–Ω–µ–ª—å", reply_markup=adminboard)
    else:
        await bot.send_message(message.from_user.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–¥–º–∏–Ω")


@dp.message_handler(commands=['getid'])
async def get_id(message: types.Message):
    print(message.from_user.id)


@dp.message_handler()
async def echo_message(msg: types.Message):
    if msg.text == 'üëï –û–¥–µ–∂–¥–∞ üëï':
        await bot.send_message(msg.from_user.id, "–û—Ç–ª–∏—á–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ä–∞–∑–º–µ—Ä–æ–º: ", reply_markup=sizeboard)
        update_type(1, msg.from_user.id)
    elif msg.text == 'üëü –û–±—É–≤—å üëü':
        await bot.send_message(msg.from_user.id, "–û—Ç–ª–∏—á–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ä–∞–∑–º–µ—Ä–æ–º: ", reply_markup=sizeboard)
        update_type(2, msg.from_user.id)
    elif msg.text == 'XS':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == 'S':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == 'L':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == 'M':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == 'XL':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == 'XXL':
        update_size(msg.text, msg.from_user.id)
        data = get_user_data(msg.from_user.id)
        if data[0] == 1:
            ads = show_ads_clothes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
        else:
            ads = show_ads_shoes(data[1])
            for ad in ads:
                photo = open(ad[4], 'rb')
                await bot.send_photo(msg.from_user.id, photo,
                                     caption=f"{ad[0]}\n\n{ad[2]}\n\n–†–∞–∑–º–µ—Ä: {ad[1]}\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏: {ad[3]}")
    elif msg.text == "üîô –ù–∞–∑–∞–¥":
        await bot.send_message(msg.from_user.id, "–í–µ—Ä–Ω–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", reply_markup=mainboard)
    elif msg.text == "üîô –í—ã—Ö–æ–¥":
        await bot.send_message(msg.from_user.id, "–í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–ø–∞–Ω–µ–ª–∏", reply_markup=mainboard)
    elif msg.text == 'üëï –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –û–¥–µ–∂–¥–∞ üëï':
        if is_admin(msg.from_user.id):
            await bot.send_message(msg.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
            await NewClothes.get_title.set()
        else:
            await bot.send_message(msg.from_user.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–¥–º–∏–Ω")
    elif msg.text == 'üëü –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –û–±—É–≤—å üëü':
        if is_admin(msg.from_user.id):
            await bot.send_message(msg.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
            await NewShoes.get_title.set()
        else:
            await bot.send_message(msg.from_user.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–¥–º–∏–Ω")


@dp.message_handler(state=NewClothes.get_title)
async def title(message: types.Message, state: FSMContext):
    await state.update_data(title=message.text)
    await bot.send_message(message.from_user.id, "–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    await NewClothes.next()


@dp.message_handler(state=NewClothes.get_description)
async def description(message: types.Message, state: FSMContext):
    await state.update_data(description=message.text)
    await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏")
    await NewClothes.next()


@dp.message_handler(state=NewClothes.get_contacts)
async def contacts(message: types.Message, state: FSMContext):
    await state.update_data(contacts=message.text)
    await bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä")
    await NewClothes.next()


@dp.message_handler(state=NewClothes.get_size)
async def size(message: types.Message, state: FSMContext):
    await state.update_data(size=message.text)
    await bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞ (jpg —Ñ–æ—Ä–º–∞—Ç)")
    await NewClothes.next()


@dp.message_handler(state=NewClothes.get_image, content_types=['photo'])
async def image(message: types.Message, state: FSMContext):
    photo_name = randint(1, 99999999999999)
    await message.photo[-1].download(f'images/{photo_name}.jpg')
    data = await state.get_data()
    await state.finish()
    new_clothes(data['title'], data['size'], data['description'], data['contacts'], f'images/{photo_name}.jpg')
    await bot.send_message(message.from_user.id, "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")


@dp.message_handler(state=NewShoes.get_title)
async def title2(message: types.Message, state: FSMContext):
    await state.update_data(title=message.text)
    await bot.send_message(message.from_user.id, "–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    await NewShoes.next()


@dp.message_handler(state=NewShoes.get_description)
async def description2(message: types.Message, state: FSMContext):
    await state.update_data(description=message.text)
    await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏")
    await NewShoes.next()


@dp.message_handler(state=NewShoes.get_contacts)
async def contacts2(message: types.Message, state: FSMContext):
    await state.update_data(contacts=message.text)
    await bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä")
    await NewShoes.next()


@dp.message_handler(state=NewShoes.get_size)
async def size2(message: types.Message, state: FSMContext):
    await state.update_data(size=message.text)
    await bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞ (jpg —Ñ–æ—Ä–º–∞—Ç)")
    await NewShoes.next()


@dp.message_handler(state=NewShoes.get_image, content_types=['photo'])
async def image2(message: types.Message, state: FSMContext):
    photo_name = randint(1, 99999999999999)
    await message.photo[-1].download(f'images/{photo_name}.jpg')
    data = await state.get_data()
    await state.finish()
    new_shoes(data['title'], data['size'], data['description'], data['contacts'], f'images/{photo_name}.jpg')
    await bot.send_message(message.from_user.id, "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")


if __name__ == '__main__':
    executor.start_polling(dp)
